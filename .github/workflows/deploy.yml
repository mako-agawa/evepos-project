name: CI/CD Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    env:
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    steps:
      # 1️⃣ GitHubリポジトリのチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ EC2へのSSH接続とデプロイ
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          command_timeout: 60m
          script: |
            set -x  # 詳細ログの有効化
            echo "🎉 Starting deployment..."

            # PATHの設定
            source ~/.bashrc
            export PATH="$PATH:$HOME/.rbenv/shims:$HOME/.rbenv/bin"
            eval "$(rbenv init -)"

            # 1️⃣ ディレクトリ移動
            cd /home/ec2-user/evepos-project/event-post-api
            echo "📁 Changed directory to /home/ec2-user/evepos-project/event-post-api"

            # 2️⃣ コードの更新
            git reset --hard HEAD
            echo "🔄 Code reset complete"
            git pull origin main
            echo "🔄 Code updated to latest version"

            # 3️⃣ Bundlerのインストール
            bundle config set without 'development test'
            echo "📦 Installing gems..."
            bundle install --quiet
            echo "✅ Gems installed successfully"

            # 4️⃣ ActiveStorage インストール (初回のみ必要)
            if [ ! -f db/migrate/*_create_active_storage_tables.active_storage.rb ]; then
              echo "🗄 Installing ActiveStorage..."
              bin/rails active_storage:install
              echo "✅ ActiveStorage installation complete"
            else
              echo "🔎 ActiveStorage is already installed"
            fi

            # 5️⃣ データベースのマイグレーション
            echo "📅 Running database migrations..."
            RAILS_ENV=production bundle exec rake db:migrate
            echo "✅ Migrations complete"

            # 6️⃣ Pumaの停止 (Systemd使用)
            echo "🛑 Stopping Puma using Systemd..."
            sudo systemctl stop puma
            if ! sudo systemctl is-active --quiet puma; then
              echo "✅ Puma stopped successfully via Systemd."
            else
              echo "❌ Failed to stop Puma via Systemd."
              exit 1
            fi

            # 7️⃣ Pumaの起動 (Systemd使用)
            echo "🚀 Starting Puma using Systemd..."
            sudo systemctl start puma
            if sudo systemctl is-active --quiet puma; then
              echo "✅ Puma started successfully via Systemd."
            else
              echo "❌ Failed to start Puma via Systemd."
              exit 1
            fi

            # 8️⃣ Nginxの再起動
            echo "🔄 Restarting Nginx..."
            sudo systemctl restart nginx || echo "Failed to restart Nginx"
            echo "✅ Nginx restarted successfully"

            echo "🚀 Deployment complete"